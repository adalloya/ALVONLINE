{"ast":null,"code":"import _classCallCheck from \"/Users/adalloya/Desktop/ALVonline/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/adalloya/Desktop/ALVonline/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/adalloya/Desktop/ALVonline/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/adalloya/Desktop/ALVonline/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/adalloya/Desktop/ALVonline/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/adalloya/Desktop/ALVonline/client/src/components/FileUpload/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as firebase from 'firebase';\nfirebase.initializeApp({\n  apiKey: \"AIzaSyC9sJ8GtsGTdC_wZ__CqZX29G03Gah-ns8\",\n  authDomain: \"alvonline.firebaseapp.com\",\n  databaseURL: \"https://alvonline.firebaseio.com\",\n  projectId: \"alvonline\",\n  storageBucket: \"alvonline.appspot.com\",\n  messagingSenderId: \"858746985142\"\n});\n\nvar FileUpload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileUpload, _Component);\n\n  function FileUpload() {\n    var _this;\n\n    _classCallCheck(this, FileUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileUpload).call(this));\n    _this.state = {\n      uploadValue: 0\n    };\n    return _this;\n  }\n\n  _createClass(FileUpload, [{\n    key: \"handleOnChange\",\n    value: function handleOnChange(event) {\n      var _this2 = this;\n\n      var file = event.target.files[0];\n      var storageRef = firebase.storage().ref(\"pictures/\".concat(file.name));\n      var task = storageRef.put(file);\n      task.on('state_changed', function (snapshot) {\n        var percentage = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n\n        _this2.setState({\n          uploadValue: percentage\n        });\n      }, function (error) {\n        console.error(error.message);\n      }, function () {\n        // Upload complete\n        _this2.setState({\n          picture: task.snapshot.downloadURL\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"progress\", {\n        value: this.state.uploadValue,\n        max: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.state.uploadValue, \" %\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleOnChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        width: \"90\",\n        alt: \"itemPicture\",\n        src: this.state.picture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FileUpload;\n}(Component);\n\nReactDOM.render(React.createElement(FileUpload, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}), document.getElementById('root'));\nexport default FileUpload;","map":{"version":3,"sources":["/Users/adalloya/Desktop/ALVonline/client/src/components/FileUpload/index.js"],"names":["React","Component","ReactDOM","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","FileUpload","state","uploadValue","event","file","target","files","storageRef","storage","ref","name","task","put","on","snapshot","percentage","bytesTransferred","totalBytes","setState","error","console","message","picture","downloadURL","handleOnChange","bind","render","document","getElementById"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEAA,QAAQ,CAACC,aAAT,CAAuB;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,2BAFO;AAGnBC,EAAAA,WAAW,EAAE,kCAHM;AAInBC,EAAAA,SAAS,EAAE,WAJQ;AAKnBC,EAAAA,aAAa,EAAE,uBALI;AAMnBC,EAAAA,iBAAiB,EAAE;AANA,CAAvB;;IASMC,U;;;;;AACF,wBAAe;AAAA;;AAAA;;AACX;AACA,UAAKC,KAAL,GAAa;AACbC,MAAAA,WAAW,EAAE;AADA,KAAb;AAFW;AAKd;;;;mCAEeC,K,EAAO;AAAA;;AACnB,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAMC,UAAU,GAAGf,QAAQ,CAACgB,OAAT,GAAmBC,GAAnB,oBAAmCL,IAAI,CAACM,IAAxC,EAAnB;AACA,UAAMC,IAAI,GAAGJ,UAAU,CAACK,GAAX,CAAeR,IAAf,CAAb;AAEAO,MAAAA,IAAI,CAACE,EAAL,CAAQ,eAAR,EAAyB,UAACC,QAAD,EAAc;AACnC,YAAIC,UAAU,GAAID,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GAArE;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AACdhB,UAAAA,WAAW,EAAEa;AADC,SAAd;AAGH,OALD,EAKG,UAACI,KAAD,EAAW;AACVC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;AACH,OAPD,EAOG,YAAM;AACT;AACA,QAAA,MAAI,CAACH,QAAL,CAAc;AACVI,UAAAA,OAAO,EAAEX,IAAI,CAACG,QAAL,CAAcS;AADb,SAAd;AAGC,OAZD;AAaH;;;6BAES;AACN,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAU,QAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWC,WAA5B;AAAyC,QAAA,GAAG,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKD,KAAL,CAAWC,WADZ,OADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKsB,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAOI;AAAK,QAAA,KAAK,EAAC,IAAX;AAAgB,QAAA,GAAG,EAAG,aAAtB;AAAoC,QAAA,GAAG,EAAE,KAAKxB,KAAL,CAAWqB,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADA;AAWH;;;;EAxCoBhC,S;;AA2CzBC,QAAQ,CAACmC,MAAT,CAAgB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAgCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC;AACA,eAAe5B,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport * as firebase from 'firebase'\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyC9sJ8GtsGTdC_wZ__CqZX29G03Gah-ns8\",\n    authDomain: \"alvonline.firebaseapp.com\",\n    databaseURL: \"https://alvonline.firebaseio.com\",\n    projectId: \"alvonline\",\n    storageBucket: \"alvonline.appspot.com\",\n    messagingSenderId: \"858746985142\"\n})\n\nclass FileUpload extends Component {\n    constructor () {\n        super()\n        this.state = {\n        uploadValue: 0\n        }\n    }\n\n    handleOnChange (event) {\n        const file = event.target.files[0]\n        const storageRef = firebase.storage().ref(`pictures/${file.name}`)\n        const task = storageRef.put(file)\n\n        task.on('state_changed', (snapshot) => {\n            let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n            this.setState({\n            uploadValue: percentage\n            })\n        }, (error) => {\n            console.error(error.message)\n        }, () => {\n        // Upload complete\n        this.setState({\n            picture: task.snapshot.downloadURL\n        })\n        })\n    }\n\n    render () {\n        return (\n        <div>\n            <progress value={this.state.uploadValue} max='100'>\n            {this.state.uploadValue} %\n            </progress>\n            <br />\n            <input type='file' onChange={this.handleOnChange.bind(this)}/>\n            <br />\n            <img width='90' alt = \"itemPicture\" src={this.state.picture} />\n        </div>\n        )\n    }\n}\n\nReactDOM.render(<FileUpload />, document.getElementById('root'))\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}